/*
Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем.
*/
SET SQL_SAFE_UPDATES = 0;
UPDATE users SET create_at = now(),update_at = now();
/*
Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.
*/
SET SQL_SAFE_UPDATES = 0;
ALTER TABLE users ADD COLUMN temp_create_at datetime, ADD COLUMN temp_update_at datetime;
UPDATE users SET temp_create_at = STR_TO_DATE(create_at,'%d.%m.%Y %h:%i'),temp_update_at = STR_TO_DATE(updated_at, '%d.%m.%Y %h:%i');
ALTER TABLE users  DROP column created_at, DROP column updated_at, CHANGE column temp_create_at create_at datetime, CHANGE column temp_update_at updated_at datetime;
/*
В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.
*/
SELECT value FROM storehouses_products ORDER BY CASE WHEN value <> 0 THEN value ELSE ~0 END asc;

/*
(по желанию) Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); Отсортируйте записи в порядке, заданном в списке IN.
*/ 
SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY CASE WHEN id = 5 THEN 1 WHEN id =1 THEN 2 WHEN id = 5 THEN 3 END asc;

/*
Подсчитайте средний возраст пользователей в таблице users
*/
SELECT AVG(age) FROM (SELECT YEAR(CURRENT_TIMESTAMP) - YEAR(birthday_at) as age FROM users) AS Avg_age;

/*
Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.
*/
SELECT DAYNAME(CONCAT(YEAR(NOW()), '-', SUBSTRING(birthday_at, 6, 10))) AS week_day, COUNT(*) AS stats FROM users GROUP BY week_day ORDER BY stats DESC;
